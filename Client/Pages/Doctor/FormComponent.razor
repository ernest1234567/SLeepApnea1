@inject HttpClient _client
<EditForm Model="@doctor" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<fieldset disabled="@Disabled">
		<div class="form-group">
			<label>Name: </label>
			<div>
				<InputText @bind-Value="@doctor.Name" class="form-control" />
				<ValidationMessage For="@(() => doctor.Name)" />
			</div>
		</div>
		<div class="form-group">
			<label>PhoneNumber: </label>
			<div>
				<InputText @bind-Value="@doctor.PhoneNumber" class="form-control" />
				<ValidationMessage For="@(() => doctor.PhoneNumber)" />
			</div>
		</div>
		<div class="form-group">
			<label>Email: </label>
			<div>
				<InputText @bind-Value="@doctor.Email" class="form-control" />
				<ValidationMessage For="@(() => doctor.Email)" />
			</div>
		</div>
		<div class="form-group">
			<label>Role: </label>
			<div>
				<InputSelect @bind-Value="doctor.RolesID" class="form-control">
					<option value="">-- Select Role --</option>
					@if (Roless != null)
					{
						foreach (var roles in Roless)
						{
							<option value="@roles.ID">@roles.ID</option>
						}
					}
				</InputSelect>
				<ValidationMessage For="@(() => doctor.RolesID)" />
			</div>
		</div>

	</fieldset>

	@if (!Disabled)
	{
		<button type="submit" class="btn btn-success btn-block">
			@ButtonText
		</button>
	}
	<BackToList Target="doctors" />
</EditForm>

@code {
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public Doctor doctor { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }

	//private IList<Reviewer> Reviewers;

	//protected async override Task OnInitializedAsync()
	//{
	//	Reviewers = await _client.GetFromJsonAsync<List<Reviewer>>($"{Endpoints.ReviewersEndpoint}");
	//	//booking.DateOut = DateTime.Now;
	//}
	private IList<Roles> Roless;

	protected async override Task OnInitializedAsync()
	{
		Roless = await _client.GetFromJsonAsync<List<Roles>>($"{Endpoints.RolessEndpoint}");
		//Patient.DateOut = DateTime.Now;
	}
}
