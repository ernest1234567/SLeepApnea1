@page "/SpO2data/"
@inject HttpClient _client
@inject HttpInterceptorService _interceptor
@using Radzen
@using Radzen.Blazor
@using System.Globalization

<h3>CountData</h3>
<h4>Choose date:</h4>

<input class="form-control" type="date" format-value="yyyy-mm-dd" @bind="@inputValue" />

@if (vitaldatas == null)
{
	<div class="alert alert-info">Loading VitalDatas...</div>
}
else
{
	<table class="table table-responsive" id="rolessTable">
		<thead>
			<tr>
				<th>Date</th>
				<th>Count 100</th>
				<th>Count 99</th>
				<th>Count 98</th>
				<th>Count 97</th>
				<th>Count 96</th>
				<th>Count 95</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var vitaldata in vitaldatas)
			{
				@if (inputValue.ToString("yyyy-MM-dd") == vitaldata.Date)
				//if (vitaldata.Date == date
				{
					<tr>
						@if (vitaldata.SpO2 == 100)
						{
							SpO2Count100++;
						}
						@if (vitaldata.SpO2 == 99)
						{
							SpO2Count99++;
						}
						@if (vitaldata.BPM <= 90 && vitaldata.BPM > 85)
						{
							SpO2Count98++;
						}
						@if (vitaldata.BPM <= 85 && vitaldata.BPM > 80)
						{
							SpO2Count97++;
						}
						@if (vitaldata.BPM <= 80 && vitaldata.BPM > 75)
						{
							SpO2Count96++;
						}
						@if (vitaldata.BPM <= 75 && vitaldata.BPM > 70)
						{
							SpO2Count95++;
						}
					</tr>
				}
				SpO2Counts100 = SpO2Count100;
				SpO2Counts99 = SpO2Count99;
				SpO2Counts98 = SpO2Count98;
				SpO2Counts97 = SpO2Count97;
				SpO2Counts96 = SpO2Count96;
				SpO2Counts95 = SpO2Count95;
			}
		<td>@inputValue.ToString("yyyy-MM-dd")</td>
		<td>@SpO2Counts100</td>
		<td>@SpO2Counts99</td>
		<td>@SpO2Counts98</td>
		<td>@SpO2Counts97</td>
		<td>@SpO2Counts96</td>
		<td>@SpO2Counts95</td>
		</tbody>
	</table>
	SpO2Count100 = 0;
	SpO2Count99 = 0;
	SpO2Count98 = 0;
	SpO2Count97 = 0;
	SpO2Count96 = 0;
	SpO2Count95 = 0;
	<h1>Report</h1>
	<div class="container">
		<div class="row">
			<div class="col-sm-12 my-5">
				<Radzen.Blazor.RadzenChart>
					<Radzen.Blazor.RadzenBarSeries Data="@SpO2s" CategoryProperty="SpO2" Title="SpO2Count" ValueProperty="SpO2Count" />
					@*<RadzenValueAxis Formatter="@FormatAsUSD">*@
					<!--<RadzenGridLines Visible="true" />
						<RadzenAxisTitle Text="Revenue in USD" />
					</RadzenValueAxis>-->
					<Radzen.Blazor.RadzenBarOptions Radius="5" />
				</Radzen.Blazor.RadzenChart>
			</div>
		</div>
	</div>
}

@code {
	class DataItem
	{
		public string SpO2 { get; set; }
		public int SpO2Count { get; set; }
	}
	DataItem[] SpO2s = new DataItem[]
	{
		new DataItem
		{
			SpO2 = "SpO2 100",
			SpO2Count = SpO2Counts100,
		},
		new DataItem
		{
			SpO2 = "SpO2 99",
			SpO2Count = SpO2Counts99,
		},
		new DataItem
		{
			SpO2 = "SpO2 98",
			SpO2Count = SpO2Counts98,
		},
		new DataItem
		{
			SpO2 = "SpO2 97",
			SpO2Count = SpO2Counts97,
		},
		new DataItem
		{
			SpO2 = "SpO2 96",
			SpO2Count = SpO2Counts96,
		},
		new DataItem
		{
			SpO2 = "SpO2 95",
			SpO2Count = SpO2Counts95,
		},

								};
	public static int SpO2Counts100;
	public static int SpO2Counts99;
	public static int SpO2Counts98;
	public static int SpO2Counts97;
	public static int SpO2Counts96;
	public static int SpO2Counts95;
	public static int SpO2Count100 = 0;
	public static int SpO2Count99 = 0;
	public static int SpO2Count98 = 0;
	public static int SpO2Count97 = 0;
	public static int SpO2Count96 = 0;
	public static int SpO2Count95 = 0;
	private List<VitalData> vitaldatas;
	protected async override Task OnInitializedAsync()
	{
		_interceptor.MonitorEvent();
		vitaldatas = await _client.GetFromJsonAsync<List<VitalData>>("api/VitalDatas");
	}
	private DateTime inputValue { get; set; }
	private void OnInputValue(ChangeEventArgs changeEvent)
	{
		inputValue = (DateTime)changeEvent.Value;
	}
}