@page "/BPMdata/"
@inject HttpClient _client
@inject HttpInterceptorService _interceptor

<h3>CountData</h3>
<h4>Choose date:</h4>

<input class="form-control" type="date" format-value="yyyy-mm-dd" @bind="@inputValue" />

@if (vitaldatas == null)
{
	<div class="alert alert-info">Loading VitalDatas...</div>
}
else
{
	<table class="table table-responsive" id="rolessTable">
		<thead>
			<tr>
				<th>Date</th>
				<th>Count 96-100</th>
				<th>Count 91-95</th>
				<th>Count 86-90</th>
				<th>Count 81-85</th>
				<th>Count 76-80</th>
				<th>Count 71-75</th>
				<th>Count 66-70</th>
				<th>Count 61-65</th>
				<th>Count 56-60</th>
				<th>Count 51-55</th>
				<th>Count 46-50</th>
				<th>Count 41-45</th>
				<th>Count 36-40</th>
				<th>Count 31-35</th>
				<th>Count 26-30</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var vitaldata in vitaldatas)
			{
				@if (inputValue.ToString("yyyy-MM-dd") == vitaldata.Date)
				//if (vitaldata.Date == date
				{
					<tr>
						@if (vitaldata.BPM <= 100 && vitaldata.BPM > 95)
						{
							BPMCount100++;
						}
						@if (vitaldata.BPM <= 95 && vitaldata.BPM > 90)
						{
							BPMCount95++;
						}
						@if (vitaldata.BPM <= 90 && vitaldata.BPM > 85)
						{
							BPMCount90++;
						}
						@if (vitaldata.BPM <= 85 && vitaldata.BPM > 80)
						{
							BPMCount85++;
						}
						@if (vitaldata.BPM <= 80 && vitaldata.BPM > 75)
						{
							BPMCount80++;
						}
						@if (vitaldata.BPM <= 75 && vitaldata.BPM > 70)
						{
							BPMCount75++;
						}
						@if (vitaldata.BPM <= 70 && vitaldata.BPM > 65)
						{
							BPMCount70++;
						}
						@if (vitaldata.BPM <= 65 && vitaldata.BPM > 60)
						{
							BPMCount65++;
						}
						@if (vitaldata.BPM <= 60 && vitaldata.BPM > 55)
						{
							BPMCount60++;
						}
						@if (vitaldata.BPM <= 55 && vitaldata.BPM > 50)
						{
							BPMCount55++;
						}
						@if (vitaldata.BPM <= 50 && vitaldata.BPM > 45)
						{
							BPMCount50++;
						}
						@if (vitaldata.BPM <= 45 && vitaldata.BPM > 40)
						{
							BPMCount45++;
						}
						@if (vitaldata.BPM <= 40 && vitaldata.BPM > 35)
						{
							BPMCount40++;
						}
						@if (vitaldata.BPM <= 35 && vitaldata.BPM > 30)
						{
							BPMCount35++;
						}
						@if (vitaldata.BPM <= 30 && vitaldata.BPM > 25)
						{
							BPMCount30++;
						}
					</tr>
				}
				BPMCounts100 = BPMCount100;
				BPMCounts95 = BPMCount95;
				BPMCounts90 = BPMCount90;
				BPMCounts85 = BPMCount85;
				BPMCounts80 = BPMCount80;
				BPMCounts75 = BPMCount75;
				BPMCounts70 = BPMCount70;
				BPMCounts65 = BPMCount65;
				BPMCounts60 = BPMCount60;
				BPMCounts55 = BPMCount55;
				BPMCounts50 = BPMCount50;
				BPMCounts45 = BPMCount45;
				BPMCounts40 = BPMCount40;
				BPMCounts35 = BPMCount35;
				BPMCounts30 = BPMCount30;
			}
		<td>@inputValue.ToString("yyyy-MM-dd")</td>
		<td>@BPMCounts100</td>
		<td>@BPMCounts95</td>
		<td>@BPMCounts90</td>
		<td>@BPMCounts85</td>
		<td>@BPMCounts80</td>
		<td>@BPMCounts75</td>
		<td>@BPMCounts70</td>
		<td>@BPMCounts65</td>
		<td>@BPMCounts60</td>
		<td>@BPMCounts55</td>
		<td>@BPMCounts50</td>
		<td>@BPMCounts45</td>
		<td>@BPMCounts40</td>
		<td>@BPMCounts35</td>
		<td>@BPMCounts30</td>
		</tbody>
	</table>
	BPMCount100 = 0;
	BPMCount95 = 0;
	BPMCount90 = 0;
	BPMCount85 = 0;
	BPMCount80 = 0;
	BPMCount75 = 0;
	BPMCount70 = 0;
	BPMCount65 = 0;
	BPMCount60 = 0;
	BPMCount55 = 0;
	BPMCount50 = 0;
	BPMCount45 = 0;
	BPMCount40 = 0;
	BPMCount35 = 0;
	BPMCount30 = 0;

}

@code {
	public int BPMCounts100 = 0;
	public int BPMCounts95 = 0;
	public int BPMCounts90 = 0;
	public int BPMCounts85 = 0;
	public int BPMCounts80 = 0;
	public int BPMCounts75 = 0;
	public int BPMCounts70 = 0;
	public int BPMCounts65 = 0;
	public int BPMCounts60 = 0;
	public int BPMCounts55 = 0;
	public int BPMCounts50 = 0;
	public int BPMCounts45 = 0;
	public int BPMCounts40 = 0;
	public int BPMCounts35 = 0;
	public int BPMCounts30 = 0;
	public int BPMCount100 = 0;
	public int BPMCount95 = 0;
	public int BPMCount90 = 0;
	public int BPMCount85 = 0;
	public int BPMCount80 = 0;
	public int BPMCount75 = 0;
	public int BPMCount70 = 0;
	public int BPMCount65 = 0;
	public int BPMCount60 = 0;
	public int BPMCount55 = 0;
	public int BPMCount50 = 0;
	public int BPMCount45 = 0;
	public int BPMCount40 = 0;
	public int BPMCount35 = 0;
	public int BPMCount30 = 0;
	private List<VitalData> vitaldatas;
	protected async override Task OnInitializedAsync()
	{
		_interceptor.MonitorEvent();
		vitaldatas = await _client.GetFromJsonAsync<List<VitalData>>("api/VitalDatas");
	}
	private DateTime inputValue { get; set; }
	private void OnInputValue(ChangeEventArgs changeEvent)
	{
		inputValue = (DateTime)changeEvent.Value;
	}
}
